<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Withdraw;
use Illuminate\Support\Facades\Auth;
use Exception;
use Carbon\Carbon;

class WithdrawController extends Controller
{
    public function index()
    {
        return view('layouts.withdraw');
    }

    public function withdraw(Request $request)
    {
        try {
            $data = $request->validate(
                [
                    'withdraw_amount' => ['required'],
                ],
                [
                    'withdraw_amount.required' => "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
                ]
            );
            $withdraw_amount = $data['withdraw_amount'];
            $balance = Auth::user()->balance_credit;

            if ($withdraw_amount <= $balance && $withdraw_amount >= 100) {
                // Withdraw insert
                Withdraw::create([
                    'uid' => Auth::user()->id,
                    'total' => $data['withdraw_amount'],
                ]);

                $client = new \GuzzleHttp\Client();
                $response = $client->post('https://notify-api.line.me/api/notify', [
                    'headers' => [
                        'Authorization' => 'Bearer ' . env('LINE_NOTIFY_TOKEN'),
                        'Content-Type' => 'application/x-www-form-urlencoded',
                    ],
                    'form_params' => [
                        'message' => "\nüîî‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥üîî\n" . '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ' . $data['withdraw_amount'] . " ‡∏ö‡∏≤‡∏ó\n" . '‡πÇ‡∏î‡∏¢‡∏Ñ‡∏∏‡∏ì ' . Auth::user()->name . "\n ‡πÄ‡∏ß‡∏•‡∏≤ " . Carbon::now(),
                        // 'stickerPackageId' => 1,
                        // 'stickerId' => 100,
                    ],
                ]);
                // Redirect to the
                return redirect()->route('withdraw')->with('success', '‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 3-5 ‡∏ô‡∏≤‡∏ó‡∏µ');
            } else {
                return redirect()->route('withdraw')->with('error', '‡∏ñ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
            }
        } catch (Exception $e) {
            return redirect()->route('withdraw')->with('error', '‡∏ñ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        }
    }
}
